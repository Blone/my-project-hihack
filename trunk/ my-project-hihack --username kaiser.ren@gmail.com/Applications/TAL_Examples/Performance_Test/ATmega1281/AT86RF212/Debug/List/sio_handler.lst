###############################################################################
#                                                                             #
# IAR C/C++ Compiler V6.11.1.50453 for Atmel AVR        24/Nov/2012  12:23:00 #
# Copyright 1996-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\HiJack\Applications\Helper_Files\SIO_Support\Src\sio_ #
#                    handler.c                                                #
#    Command line =  D:\HiJack\Applications\Helper_Files\SIO_Support\Src\sio_ #
#                    handler.c --cpu=m1281 -ms -o                             #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\AT86RF212\Debug\Obj\ -D DEBUG=0 -D FFD -D        #
#                    HIGH_DATA_RATE_SUPPORT -D ENABLE_TFA -D SIO_HUB -D       #
#                    UART1 -D TAL_TYPE=AT86RF212 -D PAL_TYPE=ATMEGA1281 -D    #
#                    PAL_GENERIC_TYPE=AVR -D BOARD_TYPE=ATZB_900_MN2 -D       #
#                    HIGHEST_STACK_LAYER=PAL -lCN                             #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\AT86RF212\Debug\List\ --remarks -y               #
#                    --initializers_in_flash --no_cse --no_inline             #
#                    --no_code_motion --no_cross_call --no_clustering         #
#                    --no_tbaa --debug -DENABLE_BIT_DEFINITIONS -e -I         #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\Inc\ -I D:\HiJack\Applications\TAL_Examples\P #
#                    erformance_Test\ATmega1281\ -I                           #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\Helper_Files\SIO_Support\Inc\ -I        #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\Include\ -I                          #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\TAL\Inc\ -I                          #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\TAL\AT86RF212\Inc\ -I                #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\TFA\Inc\ -I                          #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\Inc\ -I                          #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\AVR\Generic\Inc\ -I              #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\AVR\ATMEGA1281\Inc\ -I           #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\AVR\ATMEGA1281\Boards\ -I        #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\AVR\ATMEGA1281\Boards\ATZB_900_M #
#                    N2\ -I D:\HiJack\Applications\TAL_Examples\Performance_T #
#                    est\ATmega1281\..\..\..\..\Resources\Buffer_Management\I #
#                    nc\ -I D:\HiJack\Applications\TAL_Examples\Performance_T #
#                    est\ATmega1281\..\..\..\..\Resources\Queue_Management\In #
#                    c\ --eeprom_size 4096 --dlib --dlib_config "D:\Program   #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h" -On                #
#    List file    =  D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\AT86RF212\Debug\List\sio_handler.lst             #
#    Object file  =  D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\AT86RF212\Debug\Obj\sio_handler.r90              #
#                                                                             #
#                                                                             #
###############################################################################

D:\HiJack\Applications\Helper_Files\SIO_Support\Src\sio_handler.c
      1          /**
      2           * @file sio_handler.c
      3           *
      4           * @brief Implements the SIO (UART and USB) write and read functionalities
      5           *
      6           * $Id: sio_handler.c 16792 2009-07-29 15:56:05Z sschneid $
      7           *
      8           * @author    Atmel Corporation: http://www.atmel.com
      9           * @author    Support email: avr@atmel.com
     10           */
     11          /*
     12           * Copyright (c) 2009, Atmel Corporation All rights reserved.
     13           *
     14           * Licensed under Atmel's Limited License Agreement --> EULA.txt
     15           */
     16          
     17          /* === Includes ============================================================ */
     18          
     19          #ifdef SIO_HUB
     20          #include <stdio.h>
     21          #include "pal.h"
     22          #include "sio_handler.h"
     23          
     24          /* === Macros ============================================================== */
     25          
     26          
     27          /* === Globals ============================================================= */
     28          
     29          
     30          /* === Prototypes ========================================================== */
     31          
     32          
     33          /* === Implementation ====================================================== */
     34          
     35          
     36          #if ((defined __ICCAVR__) || (defined __ICCARM__))

   \                                 In  segment CODE, align 2, keep-with-next
     37          int _sio_putchar(char data)
   \                     _sio_putchar:
     38          #else
     39          int _sio_putchar(char data, FILE *dummy)
     40          #endif
     41          {
   \   00000000   938A               ST      -Y, R24
   \   00000002   9721               SBIW    R29:R28, 1
   \   00000004   2F80               MOV     R24, R16
     42              uint8_t c = data;
   \   00000006   8388               ST      Y, R24
     43          
     44              if (c == '\n')
   \   00000008   8108               LD      R16, Y
   \   0000000A   300A               CPI     R16, 10
   \   0000000C   F451               BRNE    ??_sio_putchar_0
     45              {
     46                  c = '\r';
   \   0000000E   E00D               LDI     R16, 13
   \   00000010   8308               ST      Y, R16
     47          
     48                  while (0 == pal_sio_tx(SIO_CHANNEL, &c, 1))
   \                     ??_sio_putchar_1:
   \   00000012   E011               LDI     R17, 1
   \   00000014   019E               MOVW    R19:R18, R29:R28
   \   00000016   E001               LDI     R16, 1
   \   00000018   ........           CALL    pal_sio_tx
   \   0000001C   2300               TST     R16
   \   0000001E   F3C9               BREQ    ??_sio_putchar_1
     49                  {
     50          #ifdef USB0
     51                      /*
     52                       * For USB we need to call the USB handler via pal_task()
     53                       * within this while loop.
     54                       */
     55                      pal_task();
     56          #endif
     57                  }
     58          
     59                  c = data;
   \   00000020   8388               ST      Y, R24
     60              }
     61          
     62              while (0 == pal_sio_tx(SIO_CHANNEL, &c, 1))
   \                     ??_sio_putchar_0:
   \   00000022   E011               LDI     R17, 1
   \   00000024   019E               MOVW    R19:R18, R29:R28
   \   00000026   E001               LDI     R16, 1
   \   00000028   ........           CALL    pal_sio_tx
   \   0000002C   2300               TST     R16
   \   0000002E   F3C9               BREQ    ??_sio_putchar_0
     63              {
     64          #ifdef USB0
     65                  /*
     66                   * For USB we need to call the USB handler via pal_task()
     67                   * within this while loop.
     68                   */
     69                  pal_task();
     70          #endif
     71              }
     72          
     73              return (0);
   \   00000030   E000               LDI     R16, 0
   \   00000032   E010               LDI     R17, 0
   \   00000034   9621               ADIW    R29:R28, 1
   \   00000036   9189               LD      R24, Y+
   \   00000038   9508               RET
     74          }
     75          
     76          
     77          
     78          #if ((defined __ICCAVR__) || (defined __ICCARM__))

   \                                 In  segment CODE, align 2, keep-with-next
     79          int _sio_getchar(void)
   \                     _sio_getchar:
     80          #else
     81          int _sio_getchar(FILE *dummy)
     82          #endif
     83          {
   \   00000000   9721               SBIW    R29:R28, 1
     84              uint8_t c;
     85          
     86              while (0 == pal_sio_rx(SIO_CHANNEL, &c, 1))
   \                     ??_sio_getchar_0:
   \   00000002   E011               LDI     R17, 1
   \   00000004   019E               MOVW    R19:R18, R29:R28
   \   00000006   E001               LDI     R16, 1
   \   00000008   ........           CALL    pal_sio_rx
   \   0000000C   2300               TST     R16
   \   0000000E   F3C9               BREQ    ??_sio_getchar_0
     87              {
     88          #ifdef USB0
     89                  /*
     90                   * For USB we need to call the USB handler via pal_task()
     91                   * within this while loop.
     92                   */
     93                  pal_task();
     94          #endif
     95              }
     96          
     97              return c;
   \   00000010   8108               LD      R16, Y
   \   00000012   E010               LDI     R17, 0
   \   00000014   9621               ADIW    R29:R28, 1
   \   00000016   9508               RET
     98          }
     99          
    100          
    101          
    102          #if ((defined __ICCAVR__) || (defined __ICCARM__))

   \                                 In  segment CODE, align 2, keep-with-next
    103          int _sio_getchar_nowait(void)
   \                     _sio_getchar_nowait:
    104          #else
    105          int _sio_getchar_nowait(FILE *dummy)
    106          #endif
    107          {
   \   00000000   9721               SBIW    R29:R28, 1
    108              uint8_t c;
    109          
    110          #ifdef USB0
    111              /*
    112               * In case this is used in a while loop with USB,
    113               * we need to call the USB handler via pal_task().
    114               */
    115              pal_task();
    116          #endif
    117          
    118              int back = pal_sio_rx(SIO_CHANNEL, &c, 1);
   \   00000002   E011               LDI     R17, 1
   \   00000004   019E               MOVW    R19:R18, R29:R28
   \   00000006   E001               LDI     R16, 1
   \   00000008   ........           CALL    pal_sio_rx
   \   0000000C   2F20               MOV     R18, R16
   \   0000000E   E030               LDI     R19, 0
    119          
    120              if (back == 1)
   \   00000010   3021               CPI     R18, 1
   \   00000012   E000               LDI     R16, 0
   \   00000014   0730               CPC     R19, R16
   \   00000016   F419               BRNE    ??_sio_getchar_nowait_0
    121              {
    122                  return c;
   \   00000018   8108               LD      R16, Y
   \   0000001A   E010               LDI     R17, 0
   \   0000001C   C002               RJMP    ??_sio_getchar_nowait_1
    123              }
    124              else
    125              {
    126                  return (-1);
   \                     ??_sio_getchar_nowait_0:
   \   0000001E   EF0F               LDI     R16, 255
   \   00000020   EF1F               LDI     R17, 255
   \                     ??_sio_getchar_nowait_1:
   \   00000022   9621               ADIW    R29:R28, 1
   \   00000024   9508               RET
    127              }
    128          }
    129          
    130          #endif  /* SIO_HUB */
    131          
    132          /* EOF */

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
       1      2  _sio_getchar
                   1 2 -> pal_sio_rx
       1      2  _sio_getchar_nowait
                   1 2 -> pal_sio_rx
       2      2  _sio_putchar
                   2 2 -> pal_sio_tx


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      24  _sio_getchar
      38  _sio_getchar_nowait
      58  _sio_putchar

 
 120 bytes in segment CODE
 
 120 bytes of CODE memory

Errors: none
Warnings: none
