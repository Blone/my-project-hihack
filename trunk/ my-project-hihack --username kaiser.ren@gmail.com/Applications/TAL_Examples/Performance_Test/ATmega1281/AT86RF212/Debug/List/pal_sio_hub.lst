###############################################################################
#                                                                             #
# IAR C/C++ Compiler V6.11.1.50453 for Atmel AVR        24/Nov/2012  12:22:59 #
# Copyright 1996-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\HiJack\PAL\AVR\ATMEGA1281\Src\pal_sio_hub.c           #
#    Command line =  D:\HiJack\PAL\AVR\ATMEGA1281\Src\pal_sio_hub.c           #
#                    --cpu=m1281 -ms -o D:\HiJack\Applications\TAL_Examples\P #
#                    erformance_Test\ATmega1281\AT86RF212\Debug\Obj\ -D       #
#                    DEBUG=0 -D FFD -D HIGH_DATA_RATE_SUPPORT -D ENABLE_TFA   #
#                    -D SIO_HUB -D UART1 -D TAL_TYPE=AT86RF212 -D             #
#                    PAL_TYPE=ATMEGA1281 -D PAL_GENERIC_TYPE=AVR -D           #
#                    BOARD_TYPE=ATZB_900_MN2 -D HIGHEST_STACK_LAYER=PAL -lCN  #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\AT86RF212\Debug\List\ --remarks -y               #
#                    --initializers_in_flash --no_cse --no_inline             #
#                    --no_code_motion --no_cross_call --no_clustering         #
#                    --no_tbaa --debug -DENABLE_BIT_DEFINITIONS -e -I         #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\Inc\ -I D:\HiJack\Applications\TAL_Examples\P #
#                    erformance_Test\ATmega1281\ -I                           #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\Helper_Files\SIO_Support\Inc\ -I        #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\Include\ -I                          #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\TAL\Inc\ -I                          #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\TAL\AT86RF212\Inc\ -I                #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\TFA\Inc\ -I                          #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\Inc\ -I                          #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\AVR\Generic\Inc\ -I              #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\AVR\ATMEGA1281\Inc\ -I           #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\AVR\ATMEGA1281\Boards\ -I        #
#                    D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\..\..\..\..\PAL\AVR\ATMEGA1281\Boards\ATZB_900_M #
#                    N2\ -I D:\HiJack\Applications\TAL_Examples\Performance_T #
#                    est\ATmega1281\..\..\..\..\Resources\Buffer_Management\I #
#                    nc\ -I D:\HiJack\Applications\TAL_Examples\Performance_T #
#                    est\ATmega1281\..\..\..\..\Resources\Queue_Management\In #
#                    c\ --eeprom_size 4096 --dlib --dlib_config "D:\Program   #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h" -On                #
#    List file    =  D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\AT86RF212\Debug\List\pal_sio_hub.lst             #
#    Object file  =  D:\HiJack\Applications\TAL_Examples\Performance_Test\ATm #
#                    ega1281\AT86RF212\Debug\Obj\pal_sio_hub.r90              #
#                                                                             #
#                                                                             #
###############################################################################

D:\HiJack\PAL\AVR\ATMEGA1281\Src\pal_sio_hub.c
      1          /**
      2           * @file pal_sio_hub.c
      3           *
      4           * @brief Stream I/O hub functions
      5           *
      6           * This file implements the Stream I/O API functions.
      7           *
      8           * $Id: pal_sio_hub.c 19264 2009-11-23 08:39:05Z sschneid $
      9           *
     10           * @author    Atmel Corporation: http://www.atmel.com
     11           * @author    Support email: avr@atmel.com
     12           */
     13          /*
     14           * Copyright (c) 2009, Atmel Corporation All rights reserved.
     15           *
     16           * Licensed under Atmel's Limited License Agreement --> EULA.txt
     17           */
     18          /* === Includes ============================================================ */
     19          
     20          #if defined(SIO_HUB) || defined(DOXYGEN)
     21          
     22          #include <stdint.h>
     23          #include "pal.h"
     24          #include "return_val.h"
     25          #include "pal_uart.h"
     26          #include "pal_usb.h"
     27          
     28          /* === Globals =============================================================*/
     29          
     30          
     31          /* === Prototypes ==========================================================*/
     32          
     33          
     34          /* === Implementation ======================================================*/
     35          
     36          /**
     37           * @brief Initializes the requested SIO unit
     38           *
     39           * This function initializes the requested SIO unit.
     40           *
     41           * @param sio_unit Specifies the SIO uint to be initialized
     42           *
     43           * @return MAC_SUCCESS  if SIO unit is initialized successfully, FAILURE
     44           * otherwise
     45           */

   \                                 In  segment CODE, align 2, keep-with-next
     46          retval_t pal_sio_init(uint8_t sio_unit)
   \                     pal_sio_init:
     47          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   2F90               MOV     R25, R16
     48              retval_t status = MAC_SUCCESS;
   \   00000006   E080               LDI     R24, 0
     49          
     50              switch (sio_unit)
   \   00000008   3091               CPI     R25, 1
   \   0000000A   F439               BRNE    ??pal_sio_init_0
     51              {
     52          #ifdef UART0
     53                  case SIO_0:
     54              #ifdef BAUD_RATE
     55                      sio_uart_0_init(BAUD_RATE);
     56              #else
     57                      sio_uart_0_init(38400);
     58              #endif
     59                      break;
     60          #endif
     61          #ifdef UART1
     62                  case SIO_1:
     63              #ifdef BAUD_RATE
     64                      sio_uart_1_init(BAUD_RATE);
     65              #else
     66                      sio_uart_1_init(57600);
   \   0000000C   E000               LDI     R16, 0
   \   0000000E   EE11               LDI     R17, 225
   \   00000010   E020               LDI     R18, 0
   \   00000012   E030               LDI     R19, 0
   \   00000014   ........           CALL    sio_uart_1_init
     67              #endif
     68                      break;
   \   00000018   C001               RJMP    ??pal_sio_init_1
     69          #endif
     70          #ifdef USB0
     71                  case SIO_2:
     72                      sio_usb_init();
     73                      break;
     74          #endif
     75                  default:
     76                      status = FAILURE;
   \                     ??pal_sio_init_0:
   \   0000001A   E885               LDI     R24, 133
     77                      break;
     78              }
     79          
     80              return status;
   \                     ??pal_sio_init_1:
   \   0000001C   2F08               MOV     R16, R24
   \   0000001E   9189               LD      R24, Y+
   \   00000020   9199               LD      R25, Y+
   \   00000022   9508               RET
     81          }
     82          
     83          
     84          /**
     85           * @brief Transmits data through selected SIO unit
     86           *
     87           * This function transmits data through the selected SIO unit.
     88           *
     89           * @param sio_unit Specifies the SIO unit
     90           * @param data Pointer to the data to be transmitted is present
     91           * @param length Number of bytes to be transmitted
     92           *
     93           * @return Actual number of transmitted bytes
     94           */

   \                                 In  segment CODE, align 2, keep-with-next
     95          uint8_t pal_sio_tx(uint8_t sio_unit, uint8_t *data, uint8_t length)
   \                     pal_sio_tx:
     96          {
   \   00000000   ........           CALL    ?PROLOGUE5_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004   2FB0               MOV     R27, R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   2FA1               MOV     R26, R17
     97              uint8_t number_of_bytes_transmitted;
     98          
     99              switch (sio_unit)
   \   0000000A   30B1               CPI     R27, 1
   \   0000000C   F431               BRNE    ??pal_sio_tx_0
    100              {
    101          #ifdef UART0
    102                  case SIO_0: number_of_bytes_transmitted = sio_uart_0_tx(data, length);
    103                              break;
    104          #endif
    105          #ifdef UART1
    106                  case SIO_1: number_of_bytes_transmitted = sio_uart_1_tx(data, length);
   \   0000000E   2F2A               MOV     R18, R26
   \   00000010   018C               MOVW    R17:R16, R25:R24
   \   00000012   ........           CALL    sio_uart_1_tx
   \   00000016   2E40               MOV     R4, R16
    107                              break;
   \   00000018   C001               RJMP    ??pal_sio_tx_1
    108          #endif
    109          #ifdef USB0
    110                  case SIO_2: number_of_bytes_transmitted = sio_usb_tx(data, length);
    111                              break;
    112          #endif
    113                  default:    number_of_bytes_transmitted = 0;
   \                     ??pal_sio_tx_0:
   \   0000001A   2444               CLR     R4
    114                              break;
    115              }
    116              return (number_of_bytes_transmitted);
   \                     ??pal_sio_tx_1:
   \   0000001C   2D04               MOV     R16, R4
   \   0000001E   E0E5               LDI     R30, 5
   \   00000020   ........           JMP     ?EPILOGUE_B5_L09
    117          }
    118          
    119          
    120          /**
    121           * @brief Receives data from selected SIO unit
    122           *
    123           * This function receives data from the selected SIO unit.
    124           *
    125           * @param sio_unit Specifies SIO unit
    126           * @param[out] data Pointer to the buffer to store received data
    127           * @param[in] max_length Maximum number of bytes to be received
    128           *
    129           * @return Actual number of received bytes
    130           */

   \                                 In  segment CODE, align 2, keep-with-next
    131          uint8_t pal_sio_rx(uint8_t sio_unit, uint8_t *data, uint8_t max_length)
   \                     pal_sio_rx:
    132          {
   \   00000000   ........           CALL    ?PROLOGUE5_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004   2FB0               MOV     R27, R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   2FA1               MOV     R26, R17
    133              uint8_t number_of_bytes_received;
    134          
    135              switch (sio_unit)
   \   0000000A   30B1               CPI     R27, 1
   \   0000000C   F431               BRNE    ??pal_sio_rx_0
    136              {
    137          #ifdef UART0
    138                  case SIO_0: number_of_bytes_received = sio_uart_0_rx(data, max_length);
    139                              break;
    140          #endif
    141          #ifdef UART1
    142                  case SIO_1: number_of_bytes_received = sio_uart_1_rx(data, max_length);
   \   0000000E   2F2A               MOV     R18, R26
   \   00000010   018C               MOVW    R17:R16, R25:R24
   \   00000012   ........           CALL    sio_uart_1_rx
   \   00000016   2E40               MOV     R4, R16
    143                              break;
   \   00000018   C001               RJMP    ??pal_sio_rx_1
    144          #endif
    145          #ifdef USB0
    146                  case SIO_2: number_of_bytes_received = sio_usb_rx(data, max_length);
    147                              break;
    148          #endif
    149                  default:    number_of_bytes_received = 0;
   \                     ??pal_sio_rx_0:
   \   0000001A   2444               CLR     R4
    150                              break;
    151              }
    152          
    153              return (number_of_bytes_received);
   \                     ??pal_sio_rx_1:
   \   0000001C   2D04               MOV     R16, R4
   \   0000001E   E0E5               LDI     R30, 5
   \   00000020   ........           JMP     ?EPILOGUE_B5_L09
    154          }
    155          
    156          #endif /* SIO_HUB */
    157          
    158          /* EOF */

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
       2      2  pal_sio_init
                   2 2 -> sio_uart_1_init
       5      2  pal_sio_rx
                   5 2 -> sio_uart_1_rx
       5      2  pal_sio_tx
                   5 2 -> sio_uart_1_tx


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      36  pal_sio_init
      36  pal_sio_rx
      36  pal_sio_tx

 
 108 bytes in segment CODE
 
 108 bytes of CODE memory

Errors: none
Warnings: none
